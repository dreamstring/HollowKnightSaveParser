<ui:FluentWindow x:Class="HollowKnightSaveParser.Views.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                 xmlns:vm="clr-namespace:HollowKnightSaveParser.ViewModels"
                 xmlns:converters="clr-namespace:HollowKnightSaveParser.Converters"
                 ui:Design.Background="Black"
                 Width="940" Height="742"
                 MinWidth="500" MinHeight="500"
                 WindowStartupLocation="CenterScreen"
                 ExtendsContentIntoTitleBar="True"
                 WindowBackdropType="Mica"
                 ResizeMode="CanResize">

    <ui:FluentWindow.Resources>
        <converters:FileStatusToBrushConverter x:Key="FileStatusToBrushConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:BoolToLanguageTextConverter x:Key="BoolToLanguageTextConverter" />
        <converters:TupleConverter x:Key="TupleConverter" />

        <!-- 加载动画样式 -->
        <Style x:Key="LoadingRingStyle" TargetType="ui:ProgressRing">
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="0,0,8,0" />
        </Style>
    </ui:FluentWindow.Resources>

    <ui:FluentWindow.DataContext>
        <vm:MainViewModel />
    </ui:FluentWindow.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <ui:TitleBar x:Name="MainTitleBar" Grid.Row="0" Title="{DynamicResource AppTitle}">
        </ui:TitleBar>

        <!-- 主要内容 -->
        <Grid Grid.Row="1" Margin="20" Focusable="True" Background="Transparent" 
              PreviewMouseLeftButtonDown="OnGridPreviewMouseDown">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />  <!-- 标题区域 -->
                <RowDefinition Height="Auto" />  <!-- Tab 控件 -->
                <RowDefinition Height="Auto" />  <!-- 存档目录信息卡片 -->
                <RowDefinition Height="Auto" />  <!-- 列表标题栏 -->
                <RowDefinition Height="*" />     <!-- 列表内容区域 -->
                <RowDefinition Height="Auto" />  <!-- 状态栏 -->
            </Grid.RowDefinitions>

            <!-- 标题区域 -->
            <Grid Grid.Row="0" Margin="8,0,4,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock Text="{DynamicResource AppTitle}"
                               FontSize="20" FontWeight="SemiBold"
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                    <TextBlock Text="Hollow Knight Save Parser"
                               FontSize="13"
                               Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                               Margin="0,2,0,0" />
                </StackPanel>

                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <!-- 语言切换按钮 -->
                    <ui:Button Command="{Binding ToggleLanguageCommand}"
                               Appearance="Secondary"
                               Height="36"
                               Width="44"
                               Margin="0,0,8,0"
                               ToolTip="{DynamicResource ToggleLanguageTooltip}">
                        <ui:SymbolIcon Symbol="Globe24" FontSize="18" />
                    </ui:Button>


                    <ui:Button Content="{DynamicResource Refresh}"
                               Command="{Binding LoadSaveFilesCommand}"
                               Appearance="Secondary"
                               Height="36"
                               Margin="0,0,0,0">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="ArrowClockwise24" />
                        </ui:Button.Icon>
                    </ui:Button>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- 左侧：游戏选择按钮 -->
                <StackPanel Grid.Column="0"
                            Orientation="Horizontal"
                            HorizontalAlignment="Left">

                    <ui:Button x:Name="HollowKnightButton"
                               Content="{DynamicResource HollowKnight}"
                               Command="{Binding SelectGameCommand}"
                               CommandParameter="0"
                               Margin="0,0,8,0"
                               Padding="16,8">
                        <ui:Button.Style>
                            <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ui:Button">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="4"
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  Content="{TemplateBinding Content}" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedGameIndex}" Value="0">
                                        <Setter Property="Background" Value="#575761" />
                                        <Setter Property="BorderBrush" Value="#6B6B75" />
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="Foreground" Value="#FFFFFF" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ui:Button.Style>
                    </ui:Button>

                    <ui:Button x:Name="SilksongButton"
                               Content="{DynamicResource Silksong}"
                               Command="{Binding SelectGameCommand}"
                               CommandParameter="1"
                               Padding="16,8">
                        <ui:Button.Style>
                            <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ui:Button">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="4"
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  Content="{TemplateBinding Content}" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedGameIndex}" Value="1">
                                        <Setter Property="Background" Value="#575761" />
                                        <Setter Property="BorderBrush" Value="#6B6B75" />
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="Foreground" Value="#FFFFFF" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ui:Button.Style>
                    </ui:Button>
                </StackPanel>

                <!-- 右侧：Steam ID 选择器（仅在丝之歌模式且非手动模式下显示） -->
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedGameIndex}" Value="1" />  <!-- 改这里：直接判断游戏索引 -->
                                        <Condition Binding="{Binding UseManualPath}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <TextBlock Text="{DynamicResource SteamId}"
                               FontSize="12"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                               Margin="0,0,8,0" />

                    <ComboBox ItemsSource="{Binding AvailableSteamIds}"
                              SelectedItem="{Binding SelectedSteamId}"
                              MinWidth="120"
                              FontSize="12">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontFamily="Consolas" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </Grid>

            <!-- 存档目录信息卡片 -->
            <ui:Card Grid.Row="2" Margin="0,0,0,16">
                <Grid Margin="12,12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ui:SymbolIcon Grid.Column="0" Symbol="FolderOpen24"
                                   FontSize="20" Margin="0,0,12,0"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource AccentTextFillColorPrimaryBrush}" />

                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{DynamicResource SaveDirectory}"
                                       FontWeight="Medium" FontSize="14"
                                       Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                        </StackPanel>

                        <!-- 路径显示区域 - 自动和手动共用这个区域 -->
                        <Grid Margin="0,4,0,0" Height="32">
                            <!-- 自动模式：普通TextBlock显示检测到的路径 -->
                            <TextBlock Text="{Binding EffectiveSavePath}"
                                       FontSize="12"
                                       Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                       VerticalAlignment="Center"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding SaveDirectory}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding UseManualPath}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <!-- 手动模式：路径选择器 -->
                            <Grid
                                Visibility="{Binding UseManualPath, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!-- 改成可编辑的TextBox -->
                                <TextBox Grid.Column="0"
                                         Text="{Binding ManualSavePath, UpdateSourceTrigger=PropertyChanged}"
                                         LostFocus="OnManualPathLostFocus"
                                         FontSize="12"
                                         IsReadOnly="False"
                                         Background="{DynamicResource ControlFillColorDefaultBrush}"
                                         VerticalContentAlignment="Center"
                                         Height="32"
                                         Margin="0,0,4,0"
                                         ToolTip="{Binding ManualSavePath}" />


                                <ui:Button Grid.Column="1"
                                           Content="..."
                                           Command="{Binding BrowseManualPathCommand}"
                                           Width="32"
                                           Height="32"
                                           FontSize="12"
                                           Padding="0"
                                           ToolTip="{DynamicResource BrowseFolder}" />
                            </Grid>
                        </Grid>
                    </StackPanel>

                    <!-- 路径模式切换按钮 -->
                    <ToggleButton Grid.Column="2"
                                  Content="{DynamicResource Manual}"
                                  IsChecked="{Binding UseManualPath}"
                                  Padding="8,4"
                                  FontSize="12"
                                  Height="32"
                                  Margin="8,0,8,0"
                                  VerticalAlignment="Bottom"
                                  ToolTip="{DynamicResource ManualPathMode}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background"
                                                Value="{DynamicResource AccentFillColorDefaultBrush}" />
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource AccentFillColorDefaultBrush}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <ui:Button Grid.Column="3"
                               Content="{DynamicResource OpenFolder}"
                               Command="{Binding OpenSaveDirectoryCommand}"
                               Appearance="Secondary"
                               FontSize="12"
                               Height="32"
                               VerticalAlignment="Bottom" />
                </Grid>
            </ui:Card>
            
            <!-- 列表标题栏 - 独立出来 -->
            <Border Grid.Row="3"
                    Background="{DynamicResource CardBackgroundFillColorSecondaryBrush}"
                    BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    Padding="20,14"
                    CornerRadius="8,8,0,0"
                    Margin="0,0,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="392" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{DynamicResource SlotHeader}"
                               FontWeight="SemiBold" FontSize="12"
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                               VerticalAlignment="Center" />
                    <TextBlock Grid.Column="1" Text="{DynamicResource FileNameHeader}"
                               FontWeight="SemiBold" FontSize="12"
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                               VerticalAlignment="Center" />
                    <TextBlock Grid.Column="2" Text="{DynamicResource StatusHeader}"
                               FontWeight="SemiBold" FontSize="12"
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                               VerticalAlignment="Center" />
                    <TextBlock Grid.Column="3" Text="{DynamicResource SizeHeader}"
                               FontWeight="SemiBold" FontSize="12"
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                               VerticalAlignment="Center" />
                    <TextBlock Grid.Column="4" Text="{DynamicResource ModifiedHeader}"
                               FontWeight="SemiBold" FontSize="12"
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                               VerticalAlignment="Center" />
                    <TextBlock Grid.Column="5" Text="{DynamicResource OperationsHeader}"
                               FontWeight="SemiBold" FontSize="12"
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                               VerticalAlignment="Center" />
                </Grid>
            </Border>

            <!-- 文件列表内容区域 - 直接使用，占满剩余空间 -->
            <Border Grid.Row="4"
                    Background="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1,0,1,1"
                    CornerRadius="0,0,8,8">

                <!-- 用Grid包装所有内容 -->
                <Grid>
                    <!-- 文件列表 -->
                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                  HorizontalScrollBarVisibility="Disabled"
                                  Visibility="{Binding HasFiles, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ItemsControl ItemsSource="{Binding SaveFiles}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
                                            BorderThickness="0,0,0,1"
                                            Padding="20,16"
                                            Background="Transparent">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="100" />
                                                <ColumnDefinition Width="80" />
                                                <ColumnDefinition Width="100" />
                                                <ColumnDefinition Width="392" />
                                            </Grid.ColumnDefinitions>

                                            <!-- 槽位号 -->
                                            <Border Grid.Column="0"
                                                    Background="{DynamicResource ControlFillColorDefaultBrush}"
                                                    BorderBrush="{DynamicResource ControlStrokeColorSecondaryBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="14"
                                                    Width="28" Height="28"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center">
                                                <TextBlock Text="{Binding SlotNumber}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           FontWeight="SemiBold"
                                                           FontSize="12"
                                                           Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                            </Border>

                                            <!-- 文件名 -->
                                            <StackPanel Grid.Column="1"
                                                        VerticalAlignment="Center"
                                                        Margin="8,0,0,0">
                                                <TextBlock Text="{Binding DisplayFileName}"
                                                           FontSize="13"
                                                           FontWeight="Medium"
                                                           Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                           TextTrimming="CharacterEllipsis" />
                                                <TextBlock Text="{Binding FileTypeDisplayText}"
                                                           FontSize="11"
                                                           Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                                           Margin="0,1,0,0" />
                                            </StackPanel>

                                            <!-- 文件状态标签 -->
                                            <Border Grid.Column="2"
                                                    Background="{Binding FileStatusText, Converter={StaticResource FileStatusToBrushConverter}}"
                                                    CornerRadius="6"
                                                    Padding="8,4"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center">
                                                <TextBlock Text="{Binding FileStatusText}"
                                                           FontSize="10"
                                                           FontWeight="SemiBold"
                                                           Foreground="White" />
                                            </Border>

                                            <!-- 文件大小 -->
                                            <TextBlock Grid.Column="3"
                                                       Text="{Binding FormattedFileSize}"
                                                       VerticalAlignment="Center"
                                                       FontSize="12"
                                                       Foreground="{DynamicResource TextFillColorSecondaryBrush}" />

                                            <!-- 修改时间 -->
                                            <TextBlock Grid.Column="4"
                                                       Text="{Binding LastModified, StringFormat='{}{0:MM-dd HH:mm}'}"
                                                       VerticalAlignment="Center"
                                                       FontSize="12"
                                                       Foreground="{DynamicResource TextFillColorSecondaryBrush}" />

                                            <!-- 转换按钮组 -->
                                            <StackPanel Grid.Column="5"
                                                        Orientation="Horizontal"
                                                        VerticalAlignment="Center">

                                                <!-- DAT转JSON按钮 - 添加右键菜单 -->
                                                <ui:Button Content="{Binding DatToJsonButtonText}"
                                                           Command="{Binding DataContext.ConvertDatToJsonCommand, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
                                                           CommandParameter="{Binding}"
                                                           IsEnabled="{Binding CanConvertToJson}"
                                                           FontSize="11"
                                                           Height="30"
                                                           Width="90"
                                                           Margin="0,0,8,0"
                                                           Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
                                                           ToolTip="{Binding DatToJsonButtonText}">
                                                    <ui:Button.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="{DynamicResource DeleteJsonFile}"
                                                                      Command="{Binding PlacementTarget.Tag.DeleteJsonFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                                      IsEnabled="{Binding HasJsonFile}">
                                                                <MenuItem.Icon>
                                                                    <ui:SymbolIcon Symbol="Delete24" FontSize="14" />
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </ui:Button.ContextMenu>
                                                    <ui:Button.Style>
                                                        <Style TargetType="ui:Button"
                                                               BasedOn="{StaticResource {x:Type ui:Button}}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding CanConvertToJson}"
                                                                             Value="False">
                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ui:Button.Style>
                                                </ui:Button>

                                                <!-- JSON转DAT按钮 - 添加右键菜单 -->
                                                <ui:Button Content="{Binding JsonToDatButtonText}"
                                                           Command="{Binding DataContext.ConvertJsonToDatCommand, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
                                                           CommandParameter="{Binding}"
                                                           IsEnabled="{Binding CanConvertToDat}"
                                                           FontSize="11"
                                                           Height="30"
                                                           Width="90"
                                                           Margin="0,0,8,0"
                                                           Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
                                                           ToolTip="{Binding JsonToDatButtonText}">
                                                    <ui:Button.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="{DynamicResource DeleteDatFile}"
                                                                      Command="{Binding PlacementTarget.Tag.DeleteDatFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                                      IsEnabled="{Binding HasDatFile}">
                                                                <MenuItem.Icon>
                                                                    <ui:SymbolIcon Symbol="Delete24" FontSize="14" />
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </ui:Button.ContextMenu>
                                                    <ui:Button.Style>
                                                        <Style TargetType="ui:Button"
                                                               BasedOn="{StaticResource {x:Type ui:Button}}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding CanConvertToDat}"
                                                                             Value="False">
                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ui:Button.Style>
                                                </ui:Button>

                                                <!-- 备份按钮 -->
                                                <ui:Button x:Name="BackupButton"
                                                           Content="{DynamicResource Backup}"
                                                           Command="{Binding DataContext.CreateBackupCommand, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
                                                           CommandParameter="{Binding}"
                                                           IsEnabled="{Binding CanBackup}"
                                                           FontSize="11"
                                                           Height="30"
                                                           Width="90"
                                                           Margin="0,0,8,0"
                                                           Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
                                                           ToolTip="{DynamicResource BackupDatFile}">
                                                    <ui:Button.ContextMenu>
                                                        <ContextMenu Opened="ContextMenu_Opened">
                                                            <!-- 创建备份 -->
                                                            <MenuItem Tag="CreateBackup"
                                                                      Header="{DynamicResource CreateBackup}"
                                                                      Command="{Binding PlacementTarget.Tag.CreateBackupCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                                      IsEnabled="{Binding CanBackup}">
                                                                <MenuItem.Icon>
                                                                    <ui:SymbolIcon Symbol="Save24" FontSize="14" />
                                                                </MenuItem.Icon>
                                                            </MenuItem>

                                                            <Separator />

                                                            <!-- 管理操作 -->
                                                            <MenuItem Tag="CleanupOldBackups"
                                                                      Header="{DynamicResource CleanupOldBackups}"
                                                                      Command="{Binding PlacementTarget.Tag.CleanupOldBackupsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                                      IsEnabled="{Binding HasBackups}">
                                                                <MenuItem.Icon>
                                                                    <ui:SymbolIcon Symbol="Broom24" FontSize="14" />
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </ui:Button.ContextMenu>
                                                </ui:Button>

                                                <!-- 恢复按钮 -->
                                                <ui:Button x:Name="RestoreButton"
                                                           Content="{DynamicResource Restore}"
                                                           Command="{Binding DataContext.RestoreSaveFileCommand, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
                                                           CommandParameter="{Binding}"
                                                           IsEnabled="{Binding CanRestore}"
                                                           FontSize="11"
                                                           Height="30"
                                                           Width="90"
                                                           Margin="0,0,8,0"
                                                           Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
                                                           ToolTip="{DynamicResource RestoreFromBackup}">
                                                    <ui:Button.ContextMenu>
                                                        <ContextMenu Opened="ContextMenu_Opened">
                                                            <!-- 恢复指定备份 -->
                                                            <MenuItem Tag="RestoreSpecificBackup"
                                                                      Header="{DynamicResource RestoreSpecificBackup}"
                                                                      IsEnabled="{Binding HasBackups}">
                                                                <MenuItem.Icon>
                                                                    <ui:SymbolIcon Symbol="History24" FontSize="14" />
                                                                </MenuItem.Icon>
                                                                <MenuItem.ItemsSource>
                                                                    <Binding Path="BackupVersions" />
                                                                </MenuItem.ItemsSource>
                                                                <MenuItem.ItemContainerStyle>
                                                                    <Style TargetType="MenuItem">
                                                                        <Setter Property="Header"
                                                                                Value="{Binding DetailedDisplayName}" />
                                                                        <Setter Property="Command"
                                                                                Value="{Binding PlacementTarget.Tag.RestoreFromSpecificBackupCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                                        <Setter Property="CommandParameter"
                                                                                Value="{Binding}" />
                                                                    </Style>
                                                                </MenuItem.ItemContainerStyle>
                                                            </MenuItem>

                                                            <Separator />

                                                            <!-- 删除备份 -->
                                                            <MenuItem Tag="DeleteBackup"
                                                                      Header="{DynamicResource DeleteBackup}"
                                                                      IsEnabled="{Binding HasBackups}">
                                                                <MenuItem.Icon>
                                                                    <ui:SymbolIcon Symbol="Delete24" FontSize="14" />
                                                                </MenuItem.Icon>
                                                                <MenuItem.ItemsSource>
                                                                    <Binding Path="BackupVersions" />
                                                                </MenuItem.ItemsSource>
                                                                <MenuItem.ItemContainerStyle>
                                                                    <Style TargetType="MenuItem">
                                                                        <Setter Property="Header"
                                                                                Value="{Binding DetailedDisplayName}" />
                                                                        <Setter Property="Command"
                                                                                Value="{Binding PlacementTarget.Tag.DeleteSpecificBackupCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                                        <Setter Property="CommandParameter"
                                                                                Value="{Binding}" />
                                                                    </Style>
                                                                </MenuItem.ItemContainerStyle>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </ui:Button.ContextMenu>
                                                </ui:Button>


                                            </StackPanel>

                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>

                    <!-- 空状态显示 -->
                    <StackPanel HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="{Binding HasNoFiles, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ui:SymbolIcon Symbol="DocumentError24"
                                       FontSize="64"
                                       Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                       Margin="0,0,0,20" />
                        <TextBlock Text="{DynamicResource NoSaveFilesFound}"
                                   FontSize="18"
                                   FontWeight="Medium"
                                   Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,8" />
                        <TextBlock Text="{DynamicResource CheckSaveDirectory}"
                                   FontSize="13"
                                   Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                   HorizontalAlignment="Center"
                                   TextAlignment="Center" />
                    </StackPanel>

                    <!-- 加载状态显示 -->
                    <StackPanel HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ui:ProgressRing IsIndeterminate="True"
                                         Width="48" Height="48"
                                         Margin="0,0,0,16" />
                        <TextBlock Text="{DynamicResource LoadingSaveFiles}"
                                   FontSize="14"
                                   Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                   HorizontalAlignment="Center" />
                    </StackPanel>
                </Grid>
            </Border>

            <!-- 简单状态栏 -->
            <Border Grid.Row="5"
                    Background="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
                    BorderThickness="0,1,0,0"
                    Padding="20,8"
                    Margin="0,16,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               FontSize="12"
                               VerticalAlignment="Center"
                               TextWrapping="Wrap">
                        <Run Text="{Binding StatusMessage}"
                             FontWeight="Medium"
                             Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                        <Run Text=": "
                             Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                        <Run Text="{Binding StatusDetail}"
                             Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                    </TextBlock>

                    <StackPanel Grid.Column="1"
                                Orientation="Horizontal"
                                VerticalAlignment="Center">
                        <TextBlock Text="{Binding FileCountText}"
                                   FontSize="12"
                                   Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                   Margin="0,0,0,0" />
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</ui:FluentWindow>